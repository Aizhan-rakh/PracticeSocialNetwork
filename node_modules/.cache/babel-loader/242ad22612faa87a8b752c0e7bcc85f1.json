{"ast":null,"code":"export const required = value => {\n  if (value) return undefined;\n  return 'Field is required';\n};\nexport const composeValidators = function () {\n  for (var _len = arguments.length, validators = new Array(_len), _key = 0; _key < _len; _key++) {\n    validators[_key] = arguments[_key];\n  }\n\n  return value => validators.reduce((error, validator) => error || validator(value), undefined);\n};\nexport const maxLengthCreator = maxLength => value => {\n  // maxlength нужно создавать за пределами формы, иначе будет зацикличность и все сломается\n  if (value && value.length > maxLength) return \"Max length is ${maxLength} symbols\";\n  return undefined;\n};","map":{"version":3,"names":["required","value","undefined","composeValidators","validators","reduce","error","validator","maxLengthCreator","maxLength","length"],"sources":["/Users/ajzanrahmetova/Desktop/Self study/React-JS-IT-cama/projects/1/src/utils/validators/validators.js"],"sourcesContent":["export const required = (value) => {\n    if (value) return undefined;\n    return 'Field is required';\n}\n\nexport const composeValidators = (...validators) => value =>\n    validators.reduce((error, validator) => error || validator(value), undefined)\n\nexport const maxLengthCreator = (maxLength) => (value) => { // maxlength нужно создавать за пределами формы, иначе будет зацикличность и все сломается\n    if (value && value.length > maxLength) return \"Max length is ${maxLength} symbols\"\n    return undefined\n}"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAIC,KAAD,IAAW;EAC/B,IAAIA,KAAJ,EAAW,OAAOC,SAAP;EACX,OAAO,mBAAP;AACH,CAHM;AAKP,OAAO,MAAMC,iBAAiB,GAAG;EAAA,kCAAIC,UAAJ;IAAIA,UAAJ;EAAA;;EAAA,OAAmBH,KAAK,IACrDG,UAAU,CAACC,MAAX,CAAkB,CAACC,KAAD,EAAQC,SAAR,KAAsBD,KAAK,IAAIC,SAAS,CAACN,KAAD,CAA1D,EAAmEC,SAAnE,CAD6B;AAAA,CAA1B;AAGP,OAAO,MAAMM,gBAAgB,GAAIC,SAAD,IAAgBR,KAAD,IAAW;EAAE;EACxD,IAAIA,KAAK,IAAIA,KAAK,CAACS,MAAN,GAAeD,SAA5B,EAAuC,OAAO,oCAAP;EACvC,OAAOP,SAAP;AACH,CAHM"},"metadata":{},"sourceType":"module"}