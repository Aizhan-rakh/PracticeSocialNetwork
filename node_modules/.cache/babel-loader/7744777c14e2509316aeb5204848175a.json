{"ast":null,"code":"import { profileApi, usersApi } from \"../api/api\";\nconst ADD_POST = 'ADD-POST';\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\nconst SET_STATUS = \"SET_STATUS\";\nlet initialState = {\n  posts: [{\n    id: 1,\n    message: \"It's my first post\",\n    like: \"25\"\n  }, {\n    id: 2,\n    message: \"It's my second post\",\n    like: \"30\"\n  }],\n  profile: null,\n  status: \"\"\n};\n\nconst profileReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST:\n      {\n        let newPost = {\n          id: 5,\n          message: action.newPostText,\n          like: \"0\"\n        };\n        return { ...state,\n          posts: [...state.posts, newPost],\n          newPostText: ''\n        };\n      }\n\n    case SET_USER_PROFILE:\n      {\n        return { ...state,\n          profile: action.profile // поменяем профиль на профиль, который сидит в экшне\n\n        };\n      }\n\n    case SET_STATUS:\n      {\n        return { ...state,\n          status: action.status\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const addPostActionCreator = newPostText => ({\n  type: ADD_POST,\n  newPostText\n});\nexport const setUserProfile = profile => ({\n  type: SET_USER_PROFILE,\n  profile\n});\nexport const setStatus = status => ({\n  type: SET_STATUS,\n  status\n});\nexport const getUserProfile = userId => {\n  // это по идее thunkCreator, we changed getUsersThunkCreator->getUsers\n  return dispatch => {\n    usersApi.getProfile(userId).then(response => {\n      dispatch(setUserProfile(response.data));\n    });\n  };\n};\nexport const getStatus = status => {\n  // это по идее thunkCreator, we changed getUsersThunkCreator->getUsers\n  return dispatch => {\n    profileApi.getStatus(status).then(response => {\n      dispatch(setStatus(response.data));\n    });\n  };\n};\nexport const updateStatus = status => {\n  // это по идее thunkCreator, we changed getUsersThunkCreator->getUsers\n  return dispatch => {\n    profileApi.updateStatus(status).then(response => {\n      if (response.data.resultCode === 0) {\n        dispatch(setStatus(status));\n      }\n    });\n  };\n};\nexport default profileReducer;","map":{"version":3,"names":["profileApi","usersApi","ADD_POST","UPDATE_NEW_POST_TEXT","SET_USER_PROFILE","SET_STATUS","initialState","posts","id","message","like","profile","status","profileReducer","state","action","type","newPost","newPostText","addPostActionCreator","setUserProfile","setStatus","getUserProfile","userId","dispatch","getProfile","then","response","data","getStatus","updateStatus","resultCode"],"sources":["/Users/ajzanrahmetova/Desktop/Self study/React-JS-IT-cama/projects/1/src/redux/profile-reducer.js"],"sourcesContent":["import {profileApi, usersApi} from \"../api/api\";\n\nconst ADD_POST = 'ADD-POST';\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\"\nconst SET_STATUS = \"SET_STATUS\"\n\nlet initialState = {\n    posts: [\n        { id: 1, message: \"It's my first post\", like: \"25\" },\n        { id: 2, message: \"It's my second post\", like: \"30\" }\n    ],\n    profile: null,\n    status: \"\"\n};\n\nconst profileReducer = (state=initialState, action) => {\n    switch (action.type) {\n        case ADD_POST: {\n            let newPost = {\n                id: 5,\n                message: action.newPostText,\n                like: \"0\"\n            };\n            return {\n                ...state,\n                posts: [...state.posts, newPost ],\n                newPostText: ''\n            };\n        }\n        case SET_USER_PROFILE: {\n            return {\n                ...state,\n                profile: action.profile // поменяем профиль на профиль, который сидит в экшне\n            };\n        }\n        case SET_STATUS: {\n            return {\n                ...state, status: action.status\n            };\n        }\n        default:\n            return state;\n    }\n}\n\nexport const addPostActionCreator = (newPostText) => ({ type: ADD_POST, newPostText })\nexport const setUserProfile = (profile) => ({\n    type: SET_USER_PROFILE, profile\n})\nexport const setStatus = (status) => ({\n    type: SET_STATUS, status\n})\n\nexport const getUserProfile = (userId ) => { // это по идее thunkCreator, we changed getUsersThunkCreator->getUsers\n    return (dispatch) => {\n        usersApi.getProfile(userId).then(response => {\n            dispatch(setUserProfile(response.data));\n        });\n    }\n}\nexport const getStatus = (status ) => { // это по идее thunkCreator, we changed getUsersThunkCreator->getUsers\n    return (dispatch) => {\n        profileApi.getStatus(status)\n            .then(response => {\n            dispatch(setStatus(response.data));\n        });\n    }\n}\nexport const updateStatus = (status ) => { // это по идее thunkCreator, we changed getUsersThunkCreator->getUsers\n    return (dispatch) => {\n        profileApi.updateStatus(status)\n            .then(response => {\n                if(response.data.resultCode === 0){\n            dispatch(setStatus(status));\n                }\n        });\n    }\n}\n\nexport default profileReducer;"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,QAApB,QAAmC,YAAnC;AAEA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,oBAAoB,GAAG,sBAA7B;AACA,MAAMC,gBAAgB,GAAG,kBAAzB;AACA,MAAMC,UAAU,GAAG,YAAnB;AAEA,IAAIC,YAAY,GAAG;EACfC,KAAK,EAAE,CACH;IAAEC,EAAE,EAAE,CAAN;IAASC,OAAO,EAAE,oBAAlB;IAAwCC,IAAI,EAAE;EAA9C,CADG,EAEH;IAAEF,EAAE,EAAE,CAAN;IAASC,OAAO,EAAE,qBAAlB;IAAyCC,IAAI,EAAE;EAA/C,CAFG,CADQ;EAKfC,OAAO,EAAE,IALM;EAMfC,MAAM,EAAE;AANO,CAAnB;;AASA,MAAMC,cAAc,GAAG,YAAgC;EAAA,IAA/BC,KAA+B,uEAAzBR,YAAyB;EAAA,IAAXS,MAAW;;EACnD,QAAQA,MAAM,CAACC,IAAf;IACI,KAAKd,QAAL;MAAe;QACX,IAAIe,OAAO,GAAG;UACVT,EAAE,EAAE,CADM;UAEVC,OAAO,EAAEM,MAAM,CAACG,WAFN;UAGVR,IAAI,EAAE;QAHI,CAAd;QAKA,OAAO,EACH,GAAGI,KADA;UAEHP,KAAK,EAAE,CAAC,GAAGO,KAAK,CAACP,KAAV,EAAiBU,OAAjB,CAFJ;UAGHC,WAAW,EAAE;QAHV,CAAP;MAKH;;IACD,KAAKd,gBAAL;MAAuB;QACnB,OAAO,EACH,GAAGU,KADA;UAEHH,OAAO,EAAEI,MAAM,CAACJ,OAFb,CAEqB;;QAFrB,CAAP;MAIH;;IACD,KAAKN,UAAL;MAAiB;QACb,OAAO,EACH,GAAGS,KADA;UACOF,MAAM,EAAEG,MAAM,CAACH;QADtB,CAAP;MAGH;;IACD;MACI,OAAOE,KAAP;EAzBR;AA2BH,CA5BD;;AA8BA,OAAO,MAAMK,oBAAoB,GAAID,WAAD,KAAkB;EAAEF,IAAI,EAAEd,QAAR;EAAkBgB;AAAlB,CAAlB,CAA7B;AACP,OAAO,MAAME,cAAc,GAAIT,OAAD,KAAc;EACxCK,IAAI,EAAEZ,gBADkC;EAChBO;AADgB,CAAd,CAAvB;AAGP,OAAO,MAAMU,SAAS,GAAIT,MAAD,KAAa;EAClCI,IAAI,EAAEX,UAD4B;EAChBO;AADgB,CAAb,CAAlB;AAIP,OAAO,MAAMU,cAAc,GAAIC,MAAD,IAAa;EAAE;EACzC,OAAQC,QAAD,IAAc;IACjBvB,QAAQ,CAACwB,UAAT,CAAoBF,MAApB,EAA4BG,IAA5B,CAAiCC,QAAQ,IAAI;MACzCH,QAAQ,CAACJ,cAAc,CAACO,QAAQ,CAACC,IAAV,CAAf,CAAR;IACH,CAFD;EAGH,CAJD;AAKH,CANM;AAOP,OAAO,MAAMC,SAAS,GAAIjB,MAAD,IAAa;EAAE;EACpC,OAAQY,QAAD,IAAc;IACjBxB,UAAU,CAAC6B,SAAX,CAAqBjB,MAArB,EACKc,IADL,CACUC,QAAQ,IAAI;MAClBH,QAAQ,CAACH,SAAS,CAACM,QAAQ,CAACC,IAAV,CAAV,CAAR;IACH,CAHD;EAIH,CALD;AAMH,CAPM;AAQP,OAAO,MAAME,YAAY,GAAIlB,MAAD,IAAa;EAAE;EACvC,OAAQY,QAAD,IAAc;IACjBxB,UAAU,CAAC8B,YAAX,CAAwBlB,MAAxB,EACKc,IADL,CACUC,QAAQ,IAAI;MACd,IAAGA,QAAQ,CAACC,IAAT,CAAcG,UAAd,KAA6B,CAAhC,EAAkC;QACtCP,QAAQ,CAACH,SAAS,CAACT,MAAD,CAAV,CAAR;MACK;IACR,CALD;EAMH,CAPD;AAQH,CATM;AAWP,eAAeC,cAAf"},"metadata":{},"sourceType":"module"}