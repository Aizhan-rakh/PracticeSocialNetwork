{"ast":null,"code":"var _jsxFileName = \"/Users/ajzanrahmetova/Desktop/Self study/React-JS-IT-cama/projects/1/src/components/Login/login.jsx\";\nimport React from 'react';\nimport module from './Login.module.scss';\nimport { Field, Form } from 'react-final-form';\nimport { connect } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { login } from '../../redux/auth-reducer'; // import { composeValidators, required } from '../../utils/validators/validators'\n\nimport { Input } from '../common/FormsControls/FormsControls';\nimport { FORM_ERROR } from \"final-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginFinalForm = _ref => {\n  let {\n    onSubmit,\n    captchaUrl\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: onSubmit,\n      render: _ref2 => {\n        let {\n          handleSubmit,\n          submitError\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Field, {\n              placeholder: 'Email',\n              name: \"email\",\n              component: Input\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Field, {\n              placeholder: 'Password',\n              name: \"password\",\n              component: Input\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Field, {\n              type: 'checkbox',\n              name: \"rememberMe\",\n              component: Input\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 29\n            }, this), \" remember me\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}; // const Login = (props) => {\n//     // const sleep = ms => new Promise(resolve => setTimeout(resolve, ms)) //это из final form документации\n//\n//     const onSubmit = async formData => {\n//         props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\n//         await sleep(300)\n//         if (!props.isAuth) {\n//             return { [FORM_ERROR]: 'Login Failed' }\n//         }\n//     }\n//\n//     if (props.isAuth) {\n//         return <Navigate to={\"/profile\"} />\n//     }\n//\n//     return (\n//         <div>\n//             <h1>Login</h1>\n//             <LoginFinalForm onSubmit={onSubmit} captchaUrl={props.captchaUrl} />\n//         </div>\n//     )\n// }\n//\n// const mapStateToProps = (state) => ({\n//     captchaUrl: state.auth.captchaUrl,\n//     isAuth: state.auth.isAuth\n// })\n//\n// export default connect(mapStateToProps, { login })(Login)\n\n\n_c = LoginFinalForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginFinalForm\");","map":{"version":3,"names":["React","module","Field","Form","connect","Navigate","login","Input","FORM_ERROR","LoginFinalForm","onSubmit","captchaUrl","handleSubmit","submitError"],"sources":["/Users/ajzanrahmetova/Desktop/Self study/React-JS-IT-cama/projects/1/src/components/Login/login.jsx"],"sourcesContent":["import React from 'react'\nimport module from './Login.module.scss'\nimport { Field, Form } from 'react-final-form'\nimport { connect } from 'react-redux'\nimport { Navigate } from 'react-router-dom'\nimport { login } from '../../redux/auth-reducer'\n// import { composeValidators, required } from '../../utils/validators/validators'\nimport { Input } from '../common/FormsControls/FormsControls'\nimport { FORM_ERROR } from \"final-form\"\n\nconst LoginFinalForm = ({ onSubmit, captchaUrl }) => {\n    return (\n        <div>\n            <Form onSubmit={onSubmit}\n                render={({ handleSubmit, submitError }) => (\n                    <form onSubmit={handleSubmit}>\n                        <div>\n                            <Field placeholder={'Email'} name={\"email\"} component={Input}  />\n                        </div>\n                        <div>\n                            <Field placeholder={'Password'} name={\"password\"} component={Input}  />\n                        </div>\n                        <div>\n                            <Field type={'checkbox'} name={\"rememberMe\"} component={Input} /> remember me\n                        </div>\n                        <div>\n                            <button type=\"submit\">Login</button>\n                        </div>\n                    </form>\n                )}\n            />\n        </div>\n    )\n}\n\n\n\n// const Login = (props) => {\n//     // const sleep = ms => new Promise(resolve => setTimeout(resolve, ms)) //это из final form документации\n//\n//     const onSubmit = async formData => {\n//         props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\n//         await sleep(300)\n//         if (!props.isAuth) {\n//             return { [FORM_ERROR]: 'Login Failed' }\n//         }\n//     }\n//\n//     if (props.isAuth) {\n//         return <Navigate to={\"/profile\"} />\n//     }\n//\n//     return (\n//         <div>\n//             <h1>Login</h1>\n//             <LoginFinalForm onSubmit={onSubmit} captchaUrl={props.captchaUrl} />\n//         </div>\n//     )\n// }\n//\n// const mapStateToProps = (state) => ({\n//     captchaUrl: state.auth.captchaUrl,\n//     isAuth: state.auth.isAuth\n// })\n//\n// export default connect(mapStateToProps, { login })(Login)"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,KAAT,EAAgBC,IAAhB,QAA4B,kBAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,KAAT,QAAsB,0BAAtB,C,CACA;;AACA,SAASC,KAAT,QAAsB,uCAAtB;AACA,SAASC,UAAT,QAA2B,YAA3B;;;AAEA,MAAMC,cAAc,GAAG,QAA8B;EAAA,IAA7B;IAAEC,QAAF;IAAYC;EAAZ,CAA6B;EACjD,oBACI;IAAA,uBACI,QAAC,IAAD;MAAM,QAAQ,EAAED,QAAhB;MACI,MAAM,EAAE;QAAA,IAAC;UAAEE,YAAF;UAAgBC;QAAhB,CAAD;QAAA,oBACJ;UAAM,QAAQ,EAAED,YAAhB;UAAA,wBACI;YAAA,uBACI,QAAC,KAAD;cAAO,WAAW,EAAE,OAApB;cAA6B,IAAI,EAAE,OAAnC;cAA4C,SAAS,EAAEL;YAAvD;cAAA;cAAA;cAAA;YAAA;UADJ;YAAA;YAAA;YAAA;UAAA,QADJ,eAII;YAAA,uBACI,QAAC,KAAD;cAAO,WAAW,EAAE,UAApB;cAAgC,IAAI,EAAE,UAAtC;cAAkD,SAAS,EAAEA;YAA7D;cAAA;cAAA;cAAA;YAAA;UADJ;YAAA;YAAA;YAAA;UAAA,QAJJ,eAOI;YAAA,wBACI,QAAC,KAAD;cAAO,IAAI,EAAE,UAAb;cAAyB,IAAI,EAAE,YAA/B;cAA6C,SAAS,EAAEA;YAAxD;cAAA;cAAA;cAAA;YAAA,QADJ;UAAA;YAAA;YAAA;YAAA;UAAA,QAPJ,eAUI;YAAA,uBACI;cAAQ,IAAI,EAAC,QAAb;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UADJ;YAAA;YAAA;YAAA;UAAA,QAVJ;QAAA;UAAA;UAAA;UAAA;QAAA,QADI;MAAA;IADZ;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAsBH,CAvBD,C,CA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;KAvDME,c"},"metadata":{},"sourceType":"module"}