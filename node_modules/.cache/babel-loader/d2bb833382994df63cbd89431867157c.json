{"ast":null,"code":"var _jsxFileName = \"/Users/ajzanrahmetova/Desktop/Self study/React-JS-IT-cama/projects/1/src/components/Login/login.jsx\";\nimport React from 'react'; // import module from './Login.module.scss'\n\nimport { Field, Form } from 'react-final-form';\nimport { Input } from \"../common/FormsControls/FormsControls\";\nimport { composeValidators, required } from \"../../utils/validators/validators\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../redux/auth-reducer\";\nimport { Navigate } from \"react-router-dom\"; // import { FORM_ERROR } from \"final-form\"\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginFinalForm = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: props.onSubmit,\n      render: _ref => {\n        let {\n          handleSubmit\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Field, {\n              placeholder: 'Email',\n              name: \"email\",\n              component: Input,\n              validate: composeValidators(required)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 39\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Field, {\n              placeholder: 'Password',\n              name: \"password\",\n              component: Input,\n              validate: composeValidators(required),\n              type: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 35\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Field, {\n              type: 'checkbox',\n              name: \"rememberMe\",\n              component: Input\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 35\n            }, this), \" remember me\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 35\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 23\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n\n_c = LoginFinalForm;\n\nconst Login = props => {\n  const onSubmit = formData => {\n    props.login(formData.email, formData.password, formData.rememberMe);\n  };\n\n  if (props.isAuth) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: '/profile'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(LoginFinalForm, {\n      onSubmit: onSubmit,\n      captchaUrl: props.captchaUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 12\n  }, this);\n};\n\n_c2 = Login;\n\nconst mapStateToProps = state => ({\n  isAuth: state.auth.isAuth\n});\n\nexport default connect(mapStateToProps, {\n  login\n})(Login); // const LoginFinalForm = ({ onSubmit, captchaUrl }) => {\n//     return (\n//         <div>\n//             <Form\n//                 onSubmit={onSubmit}\n//                 render={({ handleSubmit, submitError }) => (\n//                     <form onSubmit={handleSubmit}>\n//                         <div>\n//                             <Field placeholder={'Email'} name={\"email\"} component={Input} validate={composeValidators(required)} />\n//                         </div>\n//                         <div>\n//                             <Field placeholder={'Password'} name={\"password\"} component={Input} validate={composeValidators(required)} type={\"password\"} />\n//                         </div>\n//                         <div>\n//                             <Field type={'checkbox'} name={\"rememberMe\"} component={Input} /> remember me\n//                         </div>\n//\n//                         {captchaUrl && <img src={captchaUrl} />}\n//                         {captchaUrl &&\n//                             <div>\n//                                 <Field placeholder={'Symbols from image'} name={\"captcha\"} component={Input} validate={composeValidators(required)} />\n//                             </div>\n//                         }\n//\n//                         <div>\n//                             <button type=\"submit\">Login</button>\n//                         </div>\n//                         {submitError && <div className={module.submitError}>{submitError}</div>}\n//                     </form>\n//                 )}\n//             />\n//         </div>\n//     )\n// }\n//\n// const Login = (props) => {\n//     const sleep = ms => new Promise(resolve => setTimeout(resolve, ms)) //это из final form документации\n//\n//     const onSubmit = async formData => {\n//         props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\n//         await sleep(300)\n//         if (!props.isAuth) {\n//             return { [FORM_ERROR]: 'Login Failed' }\n//         }\n//     }\n//\n//     if (props.isAuth) {\n//         return <Navigate to={\"/profile\"} />\n//     }\n//\n//     return (\n//         <div>\n//             <h1>Login</h1>\n//             <LoginFinalForm onSubmit={onSubmit} captchaUrl={props.captchaUrl} />\n//         </div>\n//     )\n// }\n//\n// const mapStateToProps = (state) => ({\n//     captchaUrl: state.auth.captchaUrl,\n//     isAuth: state.auth.isAuth\n// })\n//\n// export default connect(mapStateToProps, { login })(Login)\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LoginFinalForm\");\n$RefreshReg$(_c2, \"Login\");","map":{"version":3,"names":["React","Field","Form","Input","composeValidators","required","connect","login","Navigate","LoginFinalForm","props","onSubmit","handleSubmit","Login","formData","email","password","rememberMe","isAuth","captchaUrl","mapStateToProps","state","auth"],"sources":["/Users/ajzanrahmetova/Desktop/Self study/React-JS-IT-cama/projects/1/src/components/Login/login.jsx"],"sourcesContent":["import React from 'react'\n// import module from './Login.module.scss'\nimport { Field, Form } from 'react-final-form'\nimport {Input} from \"../common/FormsControls/FormsControls\";\nimport {composeValidators, required} from \"../../utils/validators/validators\";\nimport {connect} from \"react-redux\";\nimport {login} from \"../../redux/auth-reducer\";\nimport {Navigate} from \"react-router-dom\";\n// import { FORM_ERROR } from \"final-form\"\n\nconst LoginFinalForm = (props) => {\n    return (\n        <div>\n            <Form onSubmit={props.onSubmit}\n                  render={({handleSubmit}) => (\n                      <form onSubmit={handleSubmit}>\n                              <div>\n                                      <Field placeholder={'Email'} name={\"email\"} component ={Input}\n                                             validate={composeValidators(required)}/>\n                              </div>\n                              <div>\n                                  <Field placeholder={'Password'} name={\"password\"} component ={Input}\n                                         validate={composeValidators(required)} type={\"password\"}/>\n                              </div>\n                              <div>\n                                  <Field type={'checkbox'} name={\"rememberMe\"} component ={Input} /> remember me\n                              </div>\n                              <div>\n                                  <button type=\"submit\">Login</button>\n                              </div>\n                      </form>\n                  )}\n            />\n        </div>\n    )\n}\n\nconst Login = (props) =>{\n    const onSubmit = (formData) => {\n        props.login(formData.email, formData.password, formData.rememberMe);\n    }\n\n    if(props.isAuth) {\n        return <Navigate to={'/profile'}/>\n    }\n\n    return <div>\n        <h1>Login</h1>\n        <LoginFinalForm onSubmit={onSubmit} captchaUrl={props.captchaUrl} />\n    </div>\n}\n\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth\n})\n\nexport default connect( mapStateToProps,  {login} )(Login);\n\n\n// const LoginFinalForm = ({ onSubmit, captchaUrl }) => {\n//     return (\n//         <div>\n//             <Form\n//                 onSubmit={onSubmit}\n//                 render={({ handleSubmit, submitError }) => (\n//                     <form onSubmit={handleSubmit}>\n//                         <div>\n//                             <Field placeholder={'Email'} name={\"email\"} component={Input} validate={composeValidators(required)} />\n//                         </div>\n//                         <div>\n//                             <Field placeholder={'Password'} name={\"password\"} component={Input} validate={composeValidators(required)} type={\"password\"} />\n//                         </div>\n//                         <div>\n//                             <Field type={'checkbox'} name={\"rememberMe\"} component={Input} /> remember me\n//                         </div>\n//\n//                         {captchaUrl && <img src={captchaUrl} />}\n//                         {captchaUrl &&\n//                             <div>\n//                                 <Field placeholder={'Symbols from image'} name={\"captcha\"} component={Input} validate={composeValidators(required)} />\n//                             </div>\n//                         }\n//\n//                         <div>\n//                             <button type=\"submit\">Login</button>\n//                         </div>\n//                         {submitError && <div className={module.submitError}>{submitError}</div>}\n//                     </form>\n//                 )}\n//             />\n//         </div>\n//     )\n// }\n//\n// const Login = (props) => {\n//     const sleep = ms => new Promise(resolve => setTimeout(resolve, ms)) //это из final form документации\n//\n//     const onSubmit = async formData => {\n//         props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\n//         await sleep(300)\n//         if (!props.isAuth) {\n//             return { [FORM_ERROR]: 'Login Failed' }\n//         }\n//     }\n//\n//     if (props.isAuth) {\n//         return <Navigate to={\"/profile\"} />\n//     }\n//\n//     return (\n//         <div>\n//             <h1>Login</h1>\n//             <LoginFinalForm onSubmit={onSubmit} captchaUrl={props.captchaUrl} />\n//         </div>\n//     )\n// }\n//\n// const mapStateToProps = (state) => ({\n//     captchaUrl: state.auth.captchaUrl,\n//     isAuth: state.auth.isAuth\n// })\n//\n// export default connect(mapStateToProps, { login })(Login)"],"mappings":"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"},"metadata":{},"sourceType":"module"}