{"ast":null,"code":"let store = {\n  _state: {\n    profilePage: {\n      posts: [{\n        id: 1,\n        message: \"It's my first post\",\n        like: \"25\"\n      }, {\n        id: 2,\n        message: \"It's my second post\",\n        like: \"30\"\n      }],\n      newPostText: 'aizhan.com'\n    },\n    dialogsPage: {\n      messages: [{\n        id: 1,\n        message: 'Hi'\n      }, {\n        id: 2,\n        message: 'How are you?'\n      }],\n      dialogs: [{\n        id: 1,\n        name: 'Aizhan'\n      }, {\n        id: 2,\n        name: 'Aisara'\n      }, {\n        id: 3,\n        name: 'Karro'\n      }, {\n        id: 4,\n        name: 'Ahmad'\n      }]\n    },\n    sidebar: {\n      friends: [{\n        id: 1,\n        name: 'Margo'\n      }, {\n        id: 2,\n        name: 'Aisara'\n      }, {\n        id: 3,\n        name: 'Karro'\n      }]\n    }\n  },\n\n  _callSubscriber() {\n    console.log('state was changed');\n  },\n\n  getState() {\n    return this._state;\n  },\n\n  subscribe(observer) {\n    this._callSubscriber = observer;\n  },\n\n  dispatch(action) {\n    if (action.type === r) {\n      let newPost = {\n        id: 5,\n        message: this._state.profilePage.newPostText,\n        like: \"0\"\n      };\n\n      this._state.profilePage.posts.push(newPost);\n\n      this._state.profilePage.newPostText = '';\n\n      this._callSubscriber(this._state);\n    } else if (action.type === 'UPDATE-NEW-POST-TEXT') {\n      this._state.profilePage.newPostText = action.newText;\n\n      this._callSubscriber(this._state);\n    }\n  }\n\n};\nexport const addPostActionCreator = () => {\n  return {\n    type: 'ADD-POST'\n  };\n};\nexport const updateNewPostTextActionCreator = text => {\n  return {\n    type: 'UPDATE-NEW-POST-TEXT',\n    newText: text\n  };\n};\nwindow.store = store;\nexport default store;","map":{"version":3,"names":["store","_state","profilePage","posts","id","message","like","newPostText","dialogsPage","messages","dialogs","name","sidebar","friends","_callSubscriber","console","log","getState","subscribe","observer","dispatch","action","type","r","newPost","push","newText","addPostActionCreator","updateNewPostTextActionCreator","text","window"],"sources":["/Users/ajzanrahmetova/Desktop/Self study/React-JS-IT-cama/projects/1/src/redux/state.js"],"sourcesContent":["let store = {\n    _state: {\n        profilePage: {\n            posts: [\n                { id: 1, message: \"It's my first post\", like: \"25\" },\n                { id: 2, message: \"It's my second post\", like: \"30\" }\n            ],\n            newPostText: 'aizhan.com'\n        },\n        dialogsPage: {\n            messages: [\n                { id: 1, message: 'Hi' },\n                { id: 2, message: 'How are you?' },\n            ],\n            dialogs: [\n                { id: 1, name: 'Aizhan' },\n                { id: 2, name: 'Aisara' },\n                { id: 3, name: 'Karro' },\n                { id: 4, name: 'Ahmad' }\n            ]\n        },\n        sidebar: {\n            friends: [\n                { id: 1, name: 'Margo' },\n                { id: 2, name: 'Aisara' },\n                { id: 3, name: 'Karro' }\n            ]\n        }\n    },\n    _callSubscriber() {\n        console.log('state was changed');\n    },\n\n    getState() {\n        return this._state;\n    },\n    subscribe(observer) {\n        this._callSubscriber = observer;\n    },\n\n    dispatch(action) {\n        if (action.type === r) {\n            let newPost = {\n                id: 5,\n                message: this._state.profilePage.newPostText,\n                like: \"0\"\n            };\n\n            this._state.profilePage.posts.push(newPost);\n            this._state.profilePage.newPostText = '';\n            this._callSubscriber(this._state);\n        }\n        else if (action.type === 'UPDATE-NEW-POST-TEXT') {\n            this._state.profilePage.newPostText = action.newText;\n            this._callSubscriber(this._state);\n        }\n    }\n}\n\nexport const addPostActionCreator = () => {\n    return { type: 'ADD-POST' }\n}\n\nexport const updateNewPostTextActionCreator = (text) => {\n    return { type: 'UPDATE-NEW-POST-TEXT', newText: text }\n}\n\n\nwindow.store = store;\nexport default store;\n"],"mappings":"AAAA,IAAIA,KAAK,GAAG;EACRC,MAAM,EAAE;IACJC,WAAW,EAAE;MACTC,KAAK,EAAE,CACH;QAAEC,EAAE,EAAE,CAAN;QAASC,OAAO,EAAE,oBAAlB;QAAwCC,IAAI,EAAE;MAA9C,CADG,EAEH;QAAEF,EAAE,EAAE,CAAN;QAASC,OAAO,EAAE,qBAAlB;QAAyCC,IAAI,EAAE;MAA/C,CAFG,CADE;MAKTC,WAAW,EAAE;IALJ,CADT;IAQJC,WAAW,EAAE;MACTC,QAAQ,EAAE,CACN;QAAEL,EAAE,EAAE,CAAN;QAASC,OAAO,EAAE;MAAlB,CADM,EAEN;QAAED,EAAE,EAAE,CAAN;QAASC,OAAO,EAAE;MAAlB,CAFM,CADD;MAKTK,OAAO,EAAE,CACL;QAAEN,EAAE,EAAE,CAAN;QAASO,IAAI,EAAE;MAAf,CADK,EAEL;QAAEP,EAAE,EAAE,CAAN;QAASO,IAAI,EAAE;MAAf,CAFK,EAGL;QAAEP,EAAE,EAAE,CAAN;QAASO,IAAI,EAAE;MAAf,CAHK,EAIL;QAAEP,EAAE,EAAE,CAAN;QAASO,IAAI,EAAE;MAAf,CAJK;IALA,CART;IAoBJC,OAAO,EAAE;MACLC,OAAO,EAAE,CACL;QAAET,EAAE,EAAE,CAAN;QAASO,IAAI,EAAE;MAAf,CADK,EAEL;QAAEP,EAAE,EAAE,CAAN;QAASO,IAAI,EAAE;MAAf,CAFK,EAGL;QAAEP,EAAE,EAAE,CAAN;QAASO,IAAI,EAAE;MAAf,CAHK;IADJ;EApBL,CADA;;EA6BRG,eAAe,GAAG;IACdC,OAAO,CAACC,GAAR,CAAY,mBAAZ;EACH,CA/BO;;EAiCRC,QAAQ,GAAG;IACP,OAAO,KAAKhB,MAAZ;EACH,CAnCO;;EAoCRiB,SAAS,CAACC,QAAD,EAAW;IAChB,KAAKL,eAAL,GAAuBK,QAAvB;EACH,CAtCO;;EAwCRC,QAAQ,CAACC,MAAD,EAAS;IACb,IAAIA,MAAM,CAACC,IAAP,KAAgBC,CAApB,EAAuB;MACnB,IAAIC,OAAO,GAAG;QACVpB,EAAE,EAAE,CADM;QAEVC,OAAO,EAAE,KAAKJ,MAAL,CAAYC,WAAZ,CAAwBK,WAFvB;QAGVD,IAAI,EAAE;MAHI,CAAd;;MAMA,KAAKL,MAAL,CAAYC,WAAZ,CAAwBC,KAAxB,CAA8BsB,IAA9B,CAAmCD,OAAnC;;MACA,KAAKvB,MAAL,CAAYC,WAAZ,CAAwBK,WAAxB,GAAsC,EAAtC;;MACA,KAAKO,eAAL,CAAqB,KAAKb,MAA1B;IACH,CAVD,MAWK,IAAIoB,MAAM,CAACC,IAAP,KAAgB,sBAApB,EAA4C;MAC7C,KAAKrB,MAAL,CAAYC,WAAZ,CAAwBK,WAAxB,GAAsCc,MAAM,CAACK,OAA7C;;MACA,KAAKZ,eAAL,CAAqB,KAAKb,MAA1B;IACH;EACJ;;AAxDO,CAAZ;AA2DA,OAAO,MAAM0B,oBAAoB,GAAG,MAAM;EACtC,OAAO;IAAEL,IAAI,EAAE;EAAR,CAAP;AACH,CAFM;AAIP,OAAO,MAAMM,8BAA8B,GAAIC,IAAD,IAAU;EACpD,OAAO;IAAEP,IAAI,EAAE,sBAAR;IAAgCI,OAAO,EAAEG;EAAzC,CAAP;AACH,CAFM;AAKPC,MAAM,CAAC9B,KAAP,GAAeA,KAAf;AACA,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}