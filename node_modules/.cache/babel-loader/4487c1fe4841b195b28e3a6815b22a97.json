{"ast":null,"code":"import React from \"react\";\nimport { updateNewMessageBodyCreator, sendMessageCreator } from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport { connect } from \"react-redux\"; // const DialogsContainer = () => { Собственный контейнер, который создали для понимания\n//     debugger;\n//     return <StoreContext.Consumer>\n//         {\n//          (store) => {\n//             let state = store.getState().dialogsPage;\n//\n//             let onSendMessageClick = () => {\n//                 store.dispatch(sendMessageCreator());\n//             }\n//\n//             let onNewMessageChange = (body) => {\n//                 store.dispatch(updateNewMessageBodyCreator(body));\n//             }\n//             return <Dialogs updateNewMessageBody={onNewMessageChange}\n//                             sendMessage={onSendMessageClick}\n//                             dialogsPage={state}/>;\n//         }\n//     }\n//     </StoreContext.Consumer>\n// }\n\nlet mapStateToProps = state => {\n  // засунул это = store.getState().\n  return {\n    dialogsPage: state.dialogsPage,\n    isAuth: state.auth.isAuth\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  // засунул store.dispatch.bind(store)\n  return {\n    updateNewMessageBody: body => {\n      dispatch(updateNewMessageBodyCreator(body));\n    },\n    sendMessage: () => {\n      dispatch(sendMessageCreator());\n    }\n  };\n};\n\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs); //мы говорим= Dialogs = ты презентационная компонента, мы хотим\n// создать вокруг тебя контейнерную компоненту, которая снабдить тебя данными. Как бы мы dialogs законнектили к стору по этим правилам\n\nexport default DialogsContainer;","map":{"version":3,"names":["React","updateNewMessageBodyCreator","sendMessageCreator","Dialogs","connect","mapStateToProps","state","dialogsPage","isAuth","auth","mapDispatchToProps","dispatch","updateNewMessageBody","body","sendMessage","DialogsContainer"],"sources":["/Users/ajzanrahmetova/Desktop/Self study/React-JS-IT-cama/projects/1/src/components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["import React from \"react\";\nimport { updateNewMessageBodyCreator, sendMessageCreator } from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\n\n// const DialogsContainer = () => { Собственный контейнер, который создали для понимания\n//     debugger;\n//     return <StoreContext.Consumer>\n//         {\n//          (store) => {\n//             let state = store.getState().dialogsPage;\n//\n//             let onSendMessageClick = () => {\n//                 store.dispatch(sendMessageCreator());\n//             }\n//\n//             let onNewMessageChange = (body) => {\n//                 store.dispatch(updateNewMessageBodyCreator(body));\n//             }\n//             return <Dialogs updateNewMessageBody={onNewMessageChange}\n//                             sendMessage={onSendMessageClick}\n//                             dialogsPage={state}/>;\n//         }\n//     }\n//     </StoreContext.Consumer>\n// }\n\nlet mapStateToProps = (state) =>{ // засунул это = store.getState().\n    return {\n        dialogsPage: state.dialogsPage,\n        isAuth: state.auth.isAuth\n    }\n}\n\nlet mapDispatchToProps = (dispatch) =>{ // засунул store.dispatch.bind(store)\n    return{\n        updateNewMessageBody: (body) => {\n            dispatch(updateNewMessageBodyCreator(body));\n        },\n        sendMessage: () => {\n            dispatch(sendMessageCreator());\n        }\n    }\n}\n\nconst DialogsContainer= connect(mapStateToProps, mapDispatchToProps )(Dialogs);\n//мы говорим= Dialogs = ты презентационная компонента, мы хотим\n// создать вокруг тебя контейнерную компоненту, которая снабдить тебя данными. Как бы мы dialogs законнектили к стору по этим правилам\n\nexport default DialogsContainer;"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,2BAAT,EAAsCC,kBAAtC,QAAgE,6BAAhE;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,eAAe,GAAIC,KAAD,IAAU;EAAE;EAC9B,OAAO;IACHC,WAAW,EAAED,KAAK,CAACC,WADhB;IAEHC,MAAM,EAAEF,KAAK,CAACG,IAAN,CAAWD;EAFhB,CAAP;AAIH,CALD;;AAOA,IAAIE,kBAAkB,GAAIC,QAAD,IAAa;EAAE;EACpC,OAAM;IACFC,oBAAoB,EAAGC,IAAD,IAAU;MAC5BF,QAAQ,CAACV,2BAA2B,CAACY,IAAD,CAA5B,CAAR;IACH,CAHC;IAIFC,WAAW,EAAE,MAAM;MACfH,QAAQ,CAACT,kBAAkB,EAAnB,CAAR;IACH;EANC,CAAN;AAQH,CATD;;AAWA,MAAMa,gBAAgB,GAAEX,OAAO,CAACC,eAAD,EAAkBK,kBAAlB,CAAP,CAA8CP,OAA9C,CAAxB,C,CACA;AACA;;AAEA,eAAeY,gBAAf"},"metadata":{},"sourceType":"module"}