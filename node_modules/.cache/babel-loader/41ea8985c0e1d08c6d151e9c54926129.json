{"ast":null,"code":"import React from 'react'; //we should import jsx, react is library from node modules\n\nimport { updateNewPostTextActionCreator, addPostActionCreator } from '../../../redux/profile-reducer';\nimport MyPosts from \"./MyPosts\";\nimport { sendMessageCreator, updateNewMessageBodyCreator } from \"../../../redux/dialogs-reducer\";\nimport { connect } from \"react-redux\";\nimport Dialogs from \"../../Dialogs/Dialogs\"; // const MyPostsContainer = () => {\n//   return (\n//       <StoreContext.Consumer>\n//           {\n//            (store) => {\n//           let state = store.getState();\n//\n//           let onPostChange = (text) => {\n//             let action = updateNewPostTextActionCreator(text);\n//             store.dispatch(action);\n//           }\n//\n//           let addPost = () => {\n//             store.dispatch(addPostActionCreator());\n//           }\n//           return <MyPosts updateNewPostText={onPostChange}\n//                           addPost={addPost}\n//                           posts={state.profilePage.posts}\n//                           newPostText={state.profilePage.newPostText} />\n//         }\n//       }\n//       </StoreContext.Consumer>\n//   )\n// }\n\nlet mapStateToProps = state => {\n  // засунул это = store.getState().\n  return {\n    posts: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  // засунул store.dispatch.bind(store)\n  return {\n    updateNewPostText: text => {\n      let action = updateNewPostTextActionCreator(text);\n      dispatch(action);\n    },\n    addPost: newPostText => {\n      dispatch(addPostActionCreator(newPostText));\n    }\n  };\n};\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\nexport default MyPostsContainer;","map":{"version":3,"names":["React","updateNewPostTextActionCreator","addPostActionCreator","MyPosts","sendMessageCreator","updateNewMessageBodyCreator","connect","Dialogs","mapStateToProps","state","posts","profilePage","newPostText","mapDispatchToProps","dispatch","updateNewPostText","text","action","addPost","MyPostsContainer"],"sources":["/Users/ajzanrahmetova/Desktop/Self study/React-JS-IT-cama/projects/1/src/components/Profile/MyPosts/MyPostsContainer.jsx"],"sourcesContent":["import React from 'react'; //we should import jsx, react is library from node modules\nimport { updateNewPostTextActionCreator, addPostActionCreator } from '../../../redux/profile-reducer';\nimport MyPosts from \"./MyPosts\";\nimport {sendMessageCreator, updateNewMessageBodyCreator} from \"../../../redux/dialogs-reducer\";\nimport {connect} from \"react-redux\";\nimport Dialogs from \"../../Dialogs/Dialogs\";\n\n\n// const MyPostsContainer = () => {\n//   return (\n//       <StoreContext.Consumer>\n//           {\n//            (store) => {\n//           let state = store.getState();\n//\n//           let onPostChange = (text) => {\n//             let action = updateNewPostTextActionCreator(text);\n//             store.dispatch(action);\n//           }\n//\n//           let addPost = () => {\n//             store.dispatch(addPostActionCreator());\n//           }\n//           return <MyPosts updateNewPostText={onPostChange}\n//                           addPost={addPost}\n//                           posts={state.profilePage.posts}\n//                           newPostText={state.profilePage.newPostText} />\n//         }\n//       }\n//       </StoreContext.Consumer>\n//   )\n// }\n\nlet mapStateToProps = (state) =>{ // засунул это = store.getState().\n    return {\n        posts: state.profilePage.posts,\n        newPostText: state.profilePage.newPostText\n    }\n}\n\nlet mapDispatchToProps = (dispatch) =>{ // засунул store.dispatch.bind(store)\n    return{\n        updateNewPostText: (text) => {\n            let action = updateNewPostTextActionCreator(text);\n            dispatch(action);\n        },\n        addPost: (newPostText) => {\n            dispatch(addPostActionCreator(newPostText));\n        }\n    }\n}\n\nconst MyPostsContainer= connect(mapStateToProps, mapDispatchToProps )(MyPosts);\n\n\nexport default MyPostsContainer;"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAA2B;;AAC3B,SAASC,8BAAT,EAAyCC,oBAAzC,QAAqE,gCAArE;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,kBAAR,EAA4BC,2BAA5B,QAA8D,gCAA9D;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,uBAApB,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,eAAe,GAAIC,KAAD,IAAU;EAAE;EAC9B,OAAO;IACHC,KAAK,EAAED,KAAK,CAACE,WAAN,CAAkBD,KADtB;IAEHE,WAAW,EAAEH,KAAK,CAACE,WAAN,CAAkBC;EAF5B,CAAP;AAIH,CALD;;AAOA,IAAIC,kBAAkB,GAAIC,QAAD,IAAa;EAAE;EACpC,OAAM;IACFC,iBAAiB,EAAGC,IAAD,IAAU;MACzB,IAAIC,MAAM,GAAGhB,8BAA8B,CAACe,IAAD,CAA3C;MACAF,QAAQ,CAACG,MAAD,CAAR;IACH,CAJC;IAKFC,OAAO,EAAGN,WAAD,IAAiB;MACtBE,QAAQ,CAACZ,oBAAoB,CAACU,WAAD,CAArB,CAAR;IACH;EAPC,CAAN;AASH,CAVD;;AAYA,MAAMO,gBAAgB,GAAEb,OAAO,CAACE,eAAD,EAAkBK,kBAAlB,CAAP,CAA8CV,OAA9C,CAAxB;AAGA,eAAegB,gBAAf"},"metadata":{},"sourceType":"module"}